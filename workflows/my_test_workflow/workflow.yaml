goal: Write production-ready code for the specified task
memory_file: memory.md
tasks:
- id: requirements
  text: '# requirements

    ## Objective

    Gather and clarify all requirements for the coding task


    ## Description

    Collect functional requirements, constraints, input/output specifications, and
    understand success criteria


    ## Substeps

    - Identify functional requirements

    - Identify constraints and edge cases

    - Clarify input/output specifications

    - Note dependencies and prerequisites


    ## Instructions

    Analyze the task requirements thoroughly. Consider all possible inputs, edge cases,
    and success criteria.


    ## Expected Output

    Complete requirements specification ready for design phase


    ## Success Criteria

    - All functional requirements documented

    - Constraints and edge cases identified

    - Input/output specifications clear

    - Dependencies documented'
- id: design
  text: '# design

    ## Objective

    Design the solution architecture and approach


    ## Description

    Plan the solution structure, algorithms, data flow, interfaces, and error handling
    approach


    ## Prerequisites

    - Requirements gathered


    ## Substeps

    - Design solution structure and architecture

    - Plan algorithms and data flow

    - Define interfaces and modules

    - Consider error handling approach


    ## Instructions

    Create a comprehensive design that addresses all requirements while considering
    maintainability, scalability, and error conditions.


    ## Expected Output

    Complete design specification ready for implementation


    ## Success Criteria

    - Solution structure defined

    - Algorithms and data flow planned

    - Interfaces designed

    - Error handling considered'
- id: implement
  text: '# implement

    ## Objective

    Implement production-ready code following best practices


    ## Description

    Write clean, readable, well-structured code that follows language conventions
    and handles errors properly


    ## Prerequisites

    - Design completed


    ## Resources

    - https://peps.python.org/pep-0008/

    - https://docs.oracle.com/javase/tutorial/java/nutsandbolts/index.html

    - https://developer.mozilla.org/en-US/docs/Web/JavaScript


    ## Substeps

    - Write clean, readable code

    - Follow language best practices

    - Add meaningful comments

    - Handle exceptions properly


    ## Instructions

    Implement the code following the design specifications. Add comprehensive error
    handling, logging, and documentation.


    ## Expected Output

    Production-ready code implementation


    ## Success Criteria

    - Code is clean and readable

    - Follows language best practices

    - Errors are properly handled

    - Code is well-documented'
- id: test
  text: '# test

    ## Objective

    Test code thoroughly and ensure quality


    ## Description

    Write unit tests, test edge cases, error conditions, and verify the implementation
    meets all requirements


    ## Prerequisites

    - Code implemented


    ## Substeps

    - Write unit tests for key functions

    - Test edge cases and error conditions

    - Review code for bugs and optimization

    - Suggest improvements


    ## Instructions

    Create comprehensive tests covering normal operation, edge cases, and error conditions.
    Verify all requirements are met.


    ## Expected Output

    Thoroughly tested code with identified issues addressed


    ## Success Criteria

    - Unit tests written for key functions

    - Edge cases and errors tested

    - Code reviewed for quality

    - Improvement suggestions provided'
steps:
- id: 1
  name: Gather Requirements
  kind: llm
  doc: Collect and analyze all requirements for the coding task
  uses:
  - requirements
- id: 2
  name: Design Solution
  kind: llm
  doc: Plan the architecture and approach for implementation
  uses:
  - requirements
  - design
- id: 3
  name: Implement Code
  kind: llm
  doc: Write the actual code following the design plan
  uses:
  - design
  - implement
- id: 4
  name: Test and Review
  kind: llm
  doc: Test the code, review for quality, and suggest improvements
  uses:
  - implement
  - test
